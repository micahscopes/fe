---
source: crates/hir-analysis/tests/ty_check.rs
expression: res
input_file: crates/hir-analysis/test_files/ty_check/aug_assign.fe
---
note: 
   ┌─ aug_assign.fe:5:46
   │  
 5 │   pub fn foo(mut foo: Foo, mut b: bool) -> i32 {
   │ ╭──────────────────────────────────────────────^
 6 │ │     foo.x *= 2
 7 │ │     b |= false
 8 │ │ 
   · │
18 │ │     arr[0]
19 │ │ }
   │ ╰─^ i32

note: 
  ┌─ aug_assign.fe:6:5
  │
6 │     foo.x *= 2
  │     ^^^ Foo

note: 
  ┌─ aug_assign.fe:6:5
  │
6 │     foo.x *= 2
  │     ^^^^^ i32

note: 
  ┌─ aug_assign.fe:6:5
  │
6 │     foo.x *= 2
  │     ^^^^^^^^^^ ()

note: 
  ┌─ aug_assign.fe:6:14
  │
6 │     foo.x *= 2
  │              ^ i32

note: 
  ┌─ aug_assign.fe:7:5
  │
7 │     b |= false
  │     ^ bool

note: 
  ┌─ aug_assign.fe:7:5
  │
7 │     b |= false
  │     ^^^^^^^^^^ ()

note: 
  ┌─ aug_assign.fe:7:10
  │
7 │     b |= false
  │          ^^^^^ bool

note: 
  ┌─ aug_assign.fe:9:9
  │
9 │     let mut x = 1
  │         ^^^^^ i32

note: 
  ┌─ aug_assign.fe:9:17
  │
9 │     let mut x = 1
  │                 ^ i32

note: 
   ┌─ aug_assign.fe:10:5
   │
10 │     x += 1
   │     ^ i32

note: 
   ┌─ aug_assign.fe:10:5
   │
10 │     x += 1
   │     ^^^^^^ ()

note: 
   ┌─ aug_assign.fe:10:10
   │
10 │     x += 1
   │          ^ i32

note: 
   ┌─ aug_assign.fe:11:5
   │
11 │     x *= 1
   │     ^ i32

note: 
   ┌─ aug_assign.fe:11:5
   │
11 │     x *= 1
   │     ^^^^^^ ()

note: 
   ┌─ aug_assign.fe:11:10
   │
11 │     x *= 1
   │          ^ i32

note: 
   ┌─ aug_assign.fe:12:5
   │
12 │     x <<= 1
   │     ^ i32

note: 
   ┌─ aug_assign.fe:12:5
   │
12 │     x <<= 1
   │     ^^^^^^^ ()

note: 
   ┌─ aug_assign.fe:12:11
   │
12 │     x <<= 1
   │           ^ i32

note: 
   ┌─ aug_assign.fe:13:5
   │
13 │     x **= 2
   │     ^ i32

note: 
   ┌─ aug_assign.fe:13:5
   │
13 │     x **= 2
   │     ^^^^^^^ ()

note: 
   ┌─ aug_assign.fe:13:11
   │
13 │     x **= 2
   │           ^ i32

note: 
   ┌─ aug_assign.fe:14:5
   │
14 │     x
   │     ^ i32

note: 
   ┌─ aug_assign.fe:16:9
   │
16 │     let mut arr = [x, 1, 2]
   │         ^^^^^^^ [i32; 3]

note: 
   ┌─ aug_assign.fe:16:19
   │
16 │     let mut arr = [x, 1, 2]
   │                   ^^^^^^^^^ [i32; 3]

note: 
   ┌─ aug_assign.fe:16:20
   │
16 │     let mut arr = [x, 1, 2]
   │                    ^ i32

note: 
   ┌─ aug_assign.fe:16:23
   │
16 │     let mut arr = [x, 1, 2]
   │                       ^ i32

note: 
   ┌─ aug_assign.fe:16:26
   │
16 │     let mut arr = [x, 1, 2]
   │                          ^ i32

note: 
   ┌─ aug_assign.fe:17:5
   │
17 │     arr[0] -= arr[1] + 1
   │     ^^^ [i32; 3]

note: 
   ┌─ aug_assign.fe:17:5
   │
17 │     arr[0] -= arr[1] + 1
   │     ^^^^^^ i32

note: 
   ┌─ aug_assign.fe:17:5
   │
17 │     arr[0] -= arr[1] + 1
   │     ^^^^^^^^^^^^^^^^^^^^ ()

note: 
   ┌─ aug_assign.fe:17:9
   │
17 │     arr[0] -= arr[1] + 1
   │         ^ u256

note: 
   ┌─ aug_assign.fe:17:15
   │
17 │     arr[0] -= arr[1] + 1
   │               ^^^ [i32; 3]

note: 
   ┌─ aug_assign.fe:17:15
   │
17 │     arr[0] -= arr[1] + 1
   │               ^^^^^^ i32

note: 
   ┌─ aug_assign.fe:17:15
   │
17 │     arr[0] -= arr[1] + 1
   │               ^^^^^^^^^^ i32

note: 
   ┌─ aug_assign.fe:17:19
   │
17 │     arr[0] -= arr[1] + 1
   │                   ^ u256

note: 
   ┌─ aug_assign.fe:17:24
   │
17 │     arr[0] -= arr[1] + 1
   │                        ^ i32

note: 
   ┌─ aug_assign.fe:18:5
   │
18 │     arr[0]
   │     ^^^ [i32; 3]

note: 
   ┌─ aug_assign.fe:18:5
   │
18 │     arr[0]
   │     ^^^^^^ i32

note: 
   ┌─ aug_assign.fe:18:9
   │
18 │     arr[0]
   │         ^ u256
