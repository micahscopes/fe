---
source: crates/parser2/tests/syntax_node.rs
expression: node
input_file: crates/parser2/test_files/syntax_node/items/path_generic.fe
---
Root@0..270
  ItemList@0..269
    Item@0..26
      Struct@0..26
        StructKw@0..6 "struct"
        WhiteSpace@6..7 " "
        Ident@7..10 "Foo"
        GenericParamList@10..13
          Lt@10..11 "<"
          TypeGenericParam@11..12
            Ident@11..12 "T"
          Gt@12..13 ">"
        WhiteSpace@13..14 " "
        RecordFieldDefList@14..26
          LBrace@14..15 "{"
          Newline@15..16 "\n"
          WhiteSpace@16..20 "    "
          RecordFieldDef@20..24
            Ident@20..21 "t"
            Colon@21..22 ":"
            WhiteSpace@22..23 " "
            PathType@23..24
              Path@23..24
                PathSegment@23..24
                  Ident@23..24 "T"
          Newline@24..25 "\n"
          RBrace@25..26 "}"
    Newline@26..28 "\n\n"
    Item@28..94
      Impl@28..94
        ImplKw@28..32 "impl"
        GenericParamList@32..35
          Lt@32..33 "<"
          TypeGenericParam@33..34
            Ident@33..34 "T"
          Gt@34..35 ">"
        WhiteSpace@35..36 " "
        PathType@36..42
          Path@36..42
            PathSegment@36..42
              Ident@36..39 "Foo"
              GenericArgList@39..42
                Lt@39..40 "<"
                TypeGenericArg@40..41
                  PathType@40..41
                    Path@40..41
                      PathSegment@40..41
                        Ident@40..41 "T"
                Gt@41..42 ">"
        WhiteSpace@42..43 " "
        ImplItemList@43..94
          LBrace@43..44 "{"
          Newline@44..45 "\n"
          WhiteSpace@45..49 "    "
          Func@49..92
            FnKw@49..51 "fn"
            WhiteSpace@51..52 " "
            Ident@52..58 "method"
            FuncParamList@58..64
              LParen@58..59 "("
              FnParam@59..63
                SelfKw@59..63 "self"
              RParen@63..64 ")"
            WhiteSpace@64..65 " "
            Arrow@65..67 "->"
            WhiteSpace@67..68 " "
            PathType@68..69
              Path@68..69
                PathSegment@68..69
                  Ident@68..69 "T"
            WhiteSpace@69..70 " "
            BlockExpr@70..92
              LBrace@70..71 "{"
              Newline@71..72 "\n"
              WhiteSpace@72..80 "        "
              ExprStmt@80..86
                FieldExpr@80..86
                  PathExpr@80..84
                    Path@80..84
                      PathSegment@80..84
                        SelfKw@80..84 "self"
                  Dot@84..85 "."
                  Ident@85..86 "t"
              Newline@86..87 "\n"
              WhiteSpace@87..91 "    "
              RBrace@91..92 "}"
          Newline@92..93 "\n"
          RBrace@93..94 "}"
    Newline@94..96 "\n\n"
    Item@96..269
      Func@96..269
        FnKw@96..98 "fn"
        WhiteSpace@98..99 " "
        Ident@99..102 "foo"
        FuncParamList@102..104
          LParen@102..103 "("
          RParen@103..104 ")"
        WhiteSpace@104..105 " "
        BlockExpr@105..269
          LBrace@105..106 "{"
          Newline@106..107 "\n"
          WhiteSpace@107..111 "    "
          Comment@111..188 "// Deciding the `Foo` ..."
          Newline@188..189 "\n"
          WhiteSpace@189..193 "    "
          LetStmt@193..214
            LetKw@193..196 "let"
            WhiteSpace@196..197 " "
            PathPat@197..198
              Path@197..198
                PathSegment@197..198
                  Ident@197..198 "x"
            WhiteSpace@198..199 " "
            Eq@199..200 "="
            WhiteSpace@200..201 " "
            CallExpr@201..214
              PathExpr@201..212
                Path@201..212
                  PathSegment@201..204
                    Ident@201..204 "Foo"
                  Colon2@204..206 "::"
                  PathSegment@206..212
                    Ident@206..212 "method"
              CallArgList@212..214
                LParen@212..213 "("
                RParen@213..214 ")"
          Newline@214..216 "\n\n"
          WhiteSpace@216..220 "    "
          Comment@220..236 "// We need this!"
          Newline@236..237 "\n"
          WhiteSpace@237..241 "    "
          LetStmt@241..267
            LetKw@241..244 "let"
            WhiteSpace@244..245 " "
            PathPat@245..246
              Path@245..246
                PathSegment@245..246
                  Ident@245..246 "x"
            WhiteSpace@246..247 " "
            Eq@247..248 "="
            WhiteSpace@248..249 " "
            CallExpr@249..267
              PathExpr@249..265
                Path@249..265
                  PathSegment@249..257
                    Ident@249..252 "Foo"
                    GenericArgList@252..257
                      Lt@252..253 "<"
                      TypeGenericArg@253..256
                        PathType@253..256
                          Path@253..256
                            PathSegment@253..256
                              Ident@253..256 "i32"
                      Gt@256..257 ">"
                  Colon2@257..259 "::"
                  PathSegment@259..265
                    Ident@259..265 "method"
              CallArgList@265..267
                LParen@265..266 "("
                RParen@266..267 ")"
          Newline@267..268 "\n"
          RBrace@268..269 "}"
  Newline@269..270 "\n"

